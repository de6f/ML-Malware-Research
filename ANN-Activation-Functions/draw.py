

# Rectified linear function
def rectified(x):
    return max(0.0, x)


def rectified_multiple(X):
    return list(map(rectified, X))


# Softmax function
from numpy import exp, sum

def softmax_multiple(X):
    return exp(X) / sum(exp(X), axis=0)


# Example data points
from numpy import random

X1 = random.uniform(low=-2, high=2, size=(10000,))
rectified_y = rectified_multiple(X1)

X2 = random.uniform(low=-2, high=5, size=(10000,))
softmax_y = softmax_multiple(X2)

# Draw functions
import matplotlib.pyplot as plt

fig, (ax1, ax2) = plt.subplots(2)
plt.subplots_adjust(hspace=0.5)

ax1.plot(X1, rectified_y, 'g.')
ax1.axhline(0, color='black')
ax1.axvline(0, color='black')
ax1.set_title('ReLU')
ax1.axis('off')

ax2.plot(X2, softmax_y, 'b.')
ax2.axhline(0, color='black')
ax2.axvline(0, color='black')
ax2.set_title('Softmax')
ax2.axis('off')

plt.show()
