# -*- coding: utf-8 -*-

import csv
import os
import numpy as np

from shutil import copyfile


#### Configuration

labelFile = 'trainLabels.csv'
imageDir = '.\\imageData_nataraj\\imageData_nataraj'
classDir = '.\\image_class\\nataraj'


k = 5
sample_count = 75

firstRun = False

#### Configuration


with open(labelFile, "r") as csvFile:
    readCSV = csv.reader(csvFile, delimiter=',')
    """
        The first row shows column names
    """
    next(readCSV)
    labels = {}
    for row in readCSV:
        labels[row[0]] = row[1] 

"""
    Get image list from the directory and arrange to seperate dictionaries
"""

if firstRun:
    
    imgFiles = os.listdir(imageDir)
    imgFiles = list(filter(lambda x: x.endswith(".png"), imgFiles))
    
    def copyFiles(copyDir, images):
        for i in range(1,10):
            os.mkdir('{}\\{}'.format(copyDir, i))

        for img in images:
            copyfile(imageDir + '\\' + img, copyDir + '\\' + \
                      labels[img.split('_')[0]] + '\\' + img)
    
    os.makedirs(classDir)    
    copyFiles(classDir, imgFiles)


"""
    Make different directiories ?
"""
flatten = lambda l: [item for sublist in l for item in sublist]

cvData = '{}\\{}_fold_{}_sample'.format(classDir, k, sample_count)
if not os.path.exists(cvData):
    os.makedirs(cvData)

for i in range(1,10):
    classLabelDir = '{}\\{}'.format(classDir, i)
    imgList = os.listdir(classLabelDir)
    imgList = imgList[:(k * sample_count)]
    
    if i == 5:
        continue
    
    images = np.array_split(imgList, k)
    
    for fold in range(0,k):
        imgList = images.copy()
        
        foldDir = '{}\\fold_{}'.format(cvData, fold)
        
        foldTrainClassDir = '{}\\train\\{}'.format(foldDir, i)
        if not os.path.exists(foldTrainClassDir):
            os.makedirs(foldTrainClassDir)
        
        foldTestClassDir = '{}\\test\\{}'.format(foldDir, i)
        if not os.path.exists(foldTestClassDir):
            os.makedirs(foldTestClassDir)
        
        testImgList = imgList.pop(fold)
        trainImgList = flatten(imgList)
        
        for img in trainImgList:
            copyfile('{}\\{}'.format(classLabelDir, img), '{}\\{}'.format(foldTrainClassDir, img))

        for img in testImgList:
            copyfile('{}\\{}'.format(classLabelDir, img), '{}\\{}'.format(foldTestClassDir, img))

